------------------
   Use of GUI
------------------

The first step in using the GUI is to load an image, using the 
"Load Image" button. This opens the file explorer, in which you 
pick an image to open into the program. Next you can use any of 
the many buttons to manipulate the image, making as many 
changes as you please. The Red, Green, Blue, and Intensity 
values are displayed on the line graph below the image, and 
update with each change made. The final step is to save the 
image. This is done by entering the path to save the image in 
the text box, then clicking save.



------------------
Script of Commands (for -text)
------------------

load <image-path> <image-name>
    - Loads an image into the processor to be used for
    other functions, at the given path and with the
    given name

save <image-path> <image-name>
    - Saves an image from the processor with the given
    name, to the given path

red-component <image-name> <destination-image-name>
    - Creates a red component grayscale image of the
    given image name, and saves it as a new image with
    the destination image name

green-component <image-name> <destination-image-name>
    - Creates a green component grayscale image of the
    given image name, and saves it as a new image with
    the destination image name

blue-component <image-name> <destination-image-name>
    - Creates a blue component grayscale image of the
    given image name, and saves it as a new image with
    the destination image name

value-component <image-name> <destination-image-name>
    - Creates a value component grayscale image of the
    given image name, and saves it as a new image with
    the destination image name

intensity-component <image-name> <destination-image-name>
    - Creates an intensity component grayscale image of
    the given image name, and saves it as a new image
    with the destination image name

luma-component <image-name> <destination-image-name>
    - Creates a luma component grayscale image of the
    given image name, and saves it as a new image with
    the destination image name

horizontal-flip <image-name> <destination-image-name>
    - Creates a horizontal flip of the given image name,
    and saves it as a new image with the destination
    image name

vertical-flip <image-name> <destination-image-name>
    - Creates a vertical flip of the given image name,
    and saves it as a new image with the destination
    image name

brighten <increment> <image-name> <destination-image-name>
    - Creates a brighter or darker image by the
    increment given (negative for darker, positive
    value for brighter) of the given image name,
    and saves the new image at the destination
    image name

blur <image-name> <destination-image-name>
    - Creates a blurred version of the given image
    name, and saves it as a new image with the
    destination image name

sharpen <image-name> <destination-image-name>
    - Creates a sharpened version of the given image
    name, and saves it as a new image with the
    destination image name

greyscale <image-name> <destination-image-name>
    - Creates a greyscale version of the given image
    name, and saves it as a new image with the
    destination image name

sepia <image-name> <destination-image-name>
    - Creates a sepia version of the given image
    name, and saves it as a new image with the
    destination image name



------------------
Example of use
------------------

Load should be the first command called, because this
loads in images for you to work with within the
program. After that, any of the manipulation functions
can be used (for example, blur). Then the last step
would be to save your images to files. Don't forget to
quit at the end!

Example (creating a blurred version of the sun image):

load res/sun.jpg sun
blur sun blurred-sun
save res/blurred-sun.jpg blurred-sun
quit